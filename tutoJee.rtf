{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs40\lang22 Introduction to Java EE\b0\fs28\par
The aim of the Java EE platform is to provide developers with a powerful set of APIs while shortening development time, reducing application complexity, and improving application performance. The Java EE platform uses a simplified programming model. XML deployment descriptors are optional. Instead, a developer can simply enter the information as an annotation directly into a Java source file. In the Java EE platform, dependency injection can be applied to all resources a component needs. Dependency injection allows the Java EE container to automatically insert references to other required components or resources, using annotations.\par
\b\fs40 Java EE Application Model\b0\fs28\par
The Java EE application model defines an architecture for implementing services as multitier applications that deliver the scalability, accessibility, and manageability needed by enterprise-level applications. This model partitions the work needed to implement a multitier service into the following parts:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 The business and presentation logic to be implemented by the developer\par
{\pntext\f1\'B7\tab}The standard system services provided by the Java EE platform\fs22\par

\pard\sa200\sl276\slmult1\par
\b\fs40 Distributed Multitiered Applications\b0\fs28\par
The Java EE platform uses a distributed multitiered application model for enterprise applications. Application logic is divided into components according to function, and the application components that make up a Java EE application are installed on various machines depending on the tier in the multitiered Java EE environment to which the application component belongs.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Client-tier components run on the client machine.\par
{\pntext\f1\'B7\tab}Web-tier components run on the Java EE server.\par
{\pntext\f1\'B7\tab}Business-tier components run on the Java EE server.\par
{\pntext\f1\'B7\tab}Enterprise information system (EIS)-tier software runs on the EIS server.\fs22\par

\pard\sa200\sl276\slmult1\b\fs40 Security\b0\fs28\par
Java EE security environment enables security constraints to be defined at deployment time. The Java EE platform provides standard declarative access control rules that are defined by the developer and interpreted when the application is deployed on the server. Java EE also provides standard login mechanisms so that application developers do not have to implement these mechanisms in their applications. The same application works in a variety of security environments without changing the source code.\par
\b\fs40 Java EE Components\b0\fs28\par
Java EE applications are made up of components. A Java EE component is a self-contained functional software unit that is assembled into a Java EE application with its related classes and files and that communicates with other components.\par
The Java EE specification defines the following Java EE components:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Application clients and applets are components that run on the client.\par
{\pntext\f1\'B7\tab}Java Servlet, JavaServer Faces, and JavaServer Pages (JSP) technology components are web components that run on the server.\par
{\pntext\f1\'B7\tab}EJB components (enterprise beans) are business components that run on the server.\par

\pard\sa200\sl276\slmult1 Java EE components are written in the Java programming language and are compiled in the same way as any program in the language. The differences between Java EE components and "standard" Java classes are that Java EE components are assembled into a Java EE application, they are verified to be well formed and in compliance with the Java EE specification, and they are deployed to production, where they are run and managed by the Java EE server.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li360\sa200\sl276\slmult1\b\fs36 Java EE Clients \b0\fs28 is usually either a web client or an application client.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Web Clients\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1 Dynamic web pages which are generated by web components running in the web tier.\par
{\pntext\f1\'B7\tab}A web browser, which renders the pages received from the server\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Application Clients\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1 An application client runs on a client machine and provides a way for users to handle tasks that require a richer user interface than can be provided by a markup language.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Applets\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1 A web page received from the web tier can include an embedded applet. Written in the Java programming language, an applet is a small client application that executes in the Java virtual machine installed in the web browser.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b The JavaBeans Component Architecture\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1 The server and client tiers might also include components based on the JavaBeans component architecture (JavaBeans components) to manage the data flow between the following:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 An application client or applet and components running on the Java EE server\par
{\pntext\f1\'B7\tab}Server components and a database\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li360\sa200\sl276\slmult1\b\fs36 Web Components\b0\fs28\par

\pard\sa200\sl276\slmult1 Java EE web components are either servlets or web pages created using JavaServer Faces technology and/or JSP technology (JSP pages). Static HTML pages and applets are bundled with web components during application assembly are not considered web components.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b Servlets\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 Servlets are Java programming language classes that dynamically process requests and construct responses\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b Web Pages create using  JSP\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 JSP pages are text-based documents that execute as servlets but allow a more natural approach to creating static content.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b Web Pages create using JSF\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 JavaServer Faces technology builds on servlets and JSP technology and provides a user interface component framework for web applications.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li360\sa200\sl276\slmult1\b\fs36 Business Components\b0\fs28\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Business code, which is logic that solves or meets the needs of a particular business domain that is handled by enterprise beans running in either the business tier or the web tier.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li360\sa200\sl276\slmult1\b\fs36 Enterprise Information System Tier\b0\fs28\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 The enterprise information system tier handles EIS software and includes enterprise infrastructure systems, such as enterprise resource planning (ERP), mainframe transaction processing, database systems, and other legacy information systems. For example, Java EE application components might need access to enterprise information systems for database connectivity.\par

\pard\sa200\sl276\slmult1\par
\b\fs40 Java EE Containers\b0\fs28\par
\par

\pard\sa200\sl276\slmult1\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\fs22\par
}
 